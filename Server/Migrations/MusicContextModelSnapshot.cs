// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicLibrary.Server.Models;

namespace MusicLibrary.Server.Migrations
{
    [DbContext(typeof(MusicContext))]
    partial class MusicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicLibrary.Server.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Artists")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Engineer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is45rpm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMono")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<short>("ReleaseYear")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Artist = "ABBA",
                            Artists = "ABBA",
                            Engineer = "",
                            Is45rpm = true,
                            IsMono = false,
                            Label = "Abbey Road Studios",
                            Notes = "",
                            Number = (short)0,
                            Rating = (byte)8,
                            ReleaseYear = (short)2016,
                            Title = "The Album",
                            Year = (short)1977
                        },
                        new
                        {
                            Id = 2,
                            Artist = "ABBA",
                            Artists = "ABBA",
                            Engineer = "",
                            Is45rpm = true,
                            IsMono = false,
                            Label = "Abbey Road Studios",
                            Notes = "",
                            Number = (short)0,
                            Rating = (byte)8,
                            ReleaseYear = (short)2016,
                            Title = "The Album",
                            Year = (short)1977
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
